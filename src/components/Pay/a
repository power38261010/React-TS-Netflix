// import React, { useState } from 'react';
// import {
//   initMercadoPago,
//   createCardToken,
//   CardNumber,
//   SecurityCode,
//   ExpirationDate,
//   getPaymentMethods,
//   getInstallments
// } from '@mercadopago/sdk-react';
// import { Box, Button, TextField, Select, MenuItem, FormControl, InputLabel, Typography, CircularProgress } from '@mui/material';

// initMercadoPago('YOUR_PUBLIC_KEY');

// const Paywall = () => {
//   const [cardNumber, setCardNumber] = useState('');
//   const [paymentMethodId, setPaymentMethodId] = useState('');
//   const [loadingPay, setLoading] = useState(false);
//   const [paymentSuccess, setPaymentSuccess] = useState(false);

//   const handleCardNumberChange = async (event: { target: { value: any; }; }) => {
//     const value = event.target.value;
//     setCardNumber(value);

//     if (value.length >= 6) {
//       const bin = value.substring(0, 6);
//       await fetchPaymentMethods(bin);
//     }
//   };

//   const fetchPaymentMethods = async (bin: any) => {
//     try {
//       const paymentMethods = await getPaymentMethods({ bin });
//       if (paymentMethods && paymentMethods !== null) {
//         setPaymentMethodId(paymentMethods?.results?.[0].id);
//       }
//     } catch (error) {
//       console.error('Error fetching payment methods:', error);
//     }
//   };


//   const cardToken = async () => {
//     try {
//       setLoading(true);
//       const response = await createCardToken({
//         cardholderName: 'CARD_HOLDER_NAME',
//         identificationType: 'BUYER_IDENTIFICATION_TYPE',
//         identificationNumber: 'BUYER_IDENTIFICATION_NUMBER',
//       });
//       console.log('Card Token Response = ', response);
//       // Aquí deberías enviar el token al backend para procesar el pago
//       setLoading(false);
//       setPaymentSuccess(true); // Simulación de éxito en el pago
//     } catch (error) {
//       console.error('Error creating card token:', error);
//       setLoading(false);
//     }
//   };

//   if (paymentSuccess) {
//     return <Typography variant="h4">¡Pago exitoso! Acceso concedido.</Typography>;
//   }

//   return (
//     <Box display="flex" flexDirection="column" alignItems="center" p={2}>
//       <Typography variant="h4" gutterBottom>Selecciona una Subscripcion para disfrutar de Netflix</Typography>
//       <FormControl fullWidth margin="normal">
//         {/* <InputLabel>Cuotas</InputLabel> */}
//         {/* <Select
//           value={selectedInstallment}
//           onChange={handleInstallmentChange}
//           label="Cuotas"
//         >
//           {installments.map((installment, index) => (
//             <MenuItem key={index} value={installment.installments}>
//               {installment.recommended_message}
//             </MenuItem>
//           ))}
//         </Select> */}
//       </FormControl>
//       <Typography variant="h4" gutterBottom>Muro de Pago</Typography>
//       <TextField
//         type="email"
//         name="payerEmail"
//         placeholder="Email del Pagador"
//         value={paymentData.payerEmail}
//         onChange={handleChange}
//         fullWidth
//         required
//       />
//       <TextField
//         type="text"
//         name="identificationType"
//         placeholder="Tipo de Identificacion"
//         value={cardData.identificationType}
//         onChange={handleChangeCard}
//         fullWidth
//         required
//       />
//         <TextField
//           type="text"
//           name="identificationNumber"
//           placeholder="Numero DNI"
//           value={cardData.identificationNumber}
//           onChange={handleChangeCard}
//           fullWidth
//           required
//         />
//       <TextField
//         type="text"
//         name="cardholderName"
//         placeholder="Nombre que figura en la Tarjeta"
//         value={cardData.cardholderName}
//         onChange={handleChangeCard}
//         fullWidth
//         required
//       />
//       <CardNumber placeholder='Card Number' />
//       <SecurityCode placeholder='Security Code' />
//       <ExpirationDate placeholder='Expiration Date' mode='short'/>
//       <Button
//         variant="contained"
//         color="primary"
//         onClick={handleTokenGeneration}
//         disabled={loadingPay}
//         fullWidth
//         sx={{ mt: 2 }}
//       >
//         {loadingPay ? <CircularProgress size={24} /> : 'Pagar'}
//         {error && <p>Error: {error}</p>}
//       </Button>
//     </Box>
//   );
// };

// export default Paywall;
